// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherStation.Web.Api.Data;

namespace WeatherStation.Web.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191201181804_NameEdit")]
    partial class NameEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherStation.Web.Api.Models.LocalWeatherStation", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Name");

                    b.ToTable("WeatherStations");
                });

            modelBuilder.Entity("WeatherStation.Web.Api.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AirPressure")
                        .HasColumnType("real");

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<string>("LocalWeatherStationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("MeasurementId");

                    b.HasIndex("LocalWeatherStationName");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("WeatherStation.Web.Api.Models.Measurement", b =>
                {
                    b.HasOne("WeatherStation.Web.Api.Models.LocalWeatherStation", "LocalWeatherStation")
                        .WithMany("Measurements")
                        .HasForeignKey("LocalWeatherStationName");
                });
#pragma warning restore 612, 618
        }
    }
}
